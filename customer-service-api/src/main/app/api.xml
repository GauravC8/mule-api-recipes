<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <http:listener-config name="api-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
    <apikit:config name="api-config" raml="api.raml" consoleEnabled="false" doc:name="Router" />
    <db:mysql-config name="MySQL_Configuration" host="123.176.38.211" port="3306" user="apiuser1" password="apiwhish#369" database="apiproject" doc:name="MySQL Configuration" />
    <flow name="apiFlow"/>
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="api-config" doc:name="APIkit Router" />
        <exception-strategy ref="api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="api-console">
        <http:listener config-ref="api-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="api-config" doc:name="APIkit Console" />
    </flow>
    <flow name="put:/customers:application/json:api-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload" />
    </flow>
    <flow name="delete:/customers:application/json:api-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload" />
    </flow>
    <flow name="post:/customers:application/json:api-config">
        <message-properties-transformer scope="session" doc:name="Message Properties">
            <add-message-property key="id" value="#[json:id]" />
            <add-message-property key="name" value="#[json:name]" />
            <add-message-property key="email" value="#[json:email]" />
            <add-message-property key="phone" value="#[json:phone]" />
        </message-properties-transformer>
        <db:insert config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[insert into customer (id, name, emailId, phone) values (#[sessionVars.Id], #[sessionVars.name], #[sessionVars.email], #[sessionVars.phone])]]></db:parameterized-query>
        </db:insert>
        <logger message="after insertion #[payload]" level="INFO" doc:name="Logger" />
        <choice doc:name="is successful">
            <when expression="#[payload==1]">
                <set-payload value="Record created successfully" doc:name="Created" />
            </when>
            <otherwise>
                <set-payload value="#[payload]" doc:name="Not Created" />
            </otherwise>
        </choice>

    </flow>
    <flow name="get:/customers/{customerId}:api-config">
        <logger message="#[message.inboundProperties.'http.uri.params'.get('customerId')]" level="INFO" doc:name="Logger"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * from customer where id= #[message.inboundProperties.'http.uri.params'.get('customerId')]]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.size() !=0 ]">
                <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
                <set-payload value="#[json:[0]]" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <set-payload value="Invalid Customer ID " doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="http.status" value="400" doc:name="Property"/>
            <set-payload value="#[payload]" doc:name="Set Payload"/>
        </catch-exception-strategy>

    </flow>
    <apikit:mapping-exception-strategy name="api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <apikit:exception value="com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException" />
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException"/>
            <logger message="#[payload]" level="INFO" doc:name="Logger" />
            <set-payload value="#[exception.cause.message]" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />

        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
